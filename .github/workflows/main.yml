# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and Terraform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Unit-Tests:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e "code/python/.[testing]"
    - name: Install Node dependencies
      run: |
        cd code/nodejs/
        npm ci 
        npm i -g jest
        cd ../../../
    - name: Test with Pytest
      run: |
        cd code/python/
        pytest . 
        cd ../../
    - name: Docker DynamoDB
      uses: rrainn/dynamodb-action@v2.0.0
      with:
        port: 8000
        cors: '*'
    - name: Test with Jest
      run: |
        cd code/nodejs/
        npm test
  S3-Sync:
    runs-on: ubuntu-18.04
    needs: Unit-Tests
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup Lambda Layers
        run: |
          cd setup/
          bash setup.sh
          cd ../
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Copy Lambda Layers to S3
        run: |
          aws s3 cp ./python.zip s3://tf-cloud
          aws s3 cp ./nodejs.zip s3://tf-cloud
      - name: Copy Lambda Functions to S3
        run : |
          aws s3 cp ./code/lambda/. s3://tf-cloud --recursive --exclude "*" --include "*.zip"
  Terraform:
    runs-on: ubuntu-18.04
    needs: [ Unit-Tests, S3-Sync ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_version: 0.14.4
      - name: Terraform Format
        id: fmt
        run: |
          cd terraform/
          terraform fmt -check
        continue-on-error: true
      - name: Terraform Initialize
        id: init
        run: |
          cd terraform/
          ls
          terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve